% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cooc.network.R
\name{cooc.network}
\alias{cooc.network}
\title{Plot the co-occurrence analysis results in a network}
\usage{
cooc.network(input, layout = "layout.circle",
  representedVariable = "patientsPhenoAB", variableCutOff = 0,
  coocPatients = 0, nodeProportion = 1, interactive = FALSE,
  verbose = FALSE)
}
\arguments{
\item{input}{A \code{cupcakeResults} object, obtained 
by applying the \code{co.occurrence} function}

\item{layout}{By default \code{'layout.circle'}. It can be set 
to any other of the possible igraph layouts.}

\item{representedVariable}{By default \code{"patientsPhenoAB"} variable will be selected. Change
it to any of the other possible variables (\code{'score'},(\code{'fdr'},\code{'oddsRatio'}, 
\code{'phi'}, \code{'relativeRisk'}, \code{'PercentagePhenoAB'}).}

\item{variableCutOff}{By default \code{'0'}. The value of the argument can be changed 
to any other numeric variable, according to the range of the selected value.}

\item{coocPatients}{by default \code{'0'}.  The value of the argument can be changed
to any other numeric variable to show in the heatmap only those comorbidities 
suffered by at least \code{coocPatients} of patients.}

\item{nodeProportion}{Determines the node size proportionality. By default it is set to 
\code{1}. The value of the argument can be changed to any other numeric variable.}

\item{interactive}{Determines if the output network is interactive or not. 
By default the \code{interactive} argument is set up as \code{FALSE}. The value 
of the argument can be changed to \code{TRUE}, as a result an interactive 
network will be obtained.}

\item{verbose}{By default \code{FALSE}. Change it to \code{TRUE} to get an
on-time log from the function.}
}
\value{
A network
}
\description{
Given an object of class \code{cupcakeResults} obtained from a co-occurrence analysis, 
a network is obtained.
}
\examples{
load(system.file("extdata", "RcupcakeExResult.RData", package="Rcupcake"))
cooc.network <- network( 
              input               = cupcakeResults,
              representedVariable = "patientsPhenoAB",
              variableCutOff      = 1.5,
              coocPatients        = 2
              )
}
